package com.example.demo.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.DTOClasses.TaskDetailsResponse;
import com.example.demo.DTOClasses.UserProjectResponse;
import com.example.demo.Entity.Task;
import com.example.demo.Entity.User;
import com.example.demo.Repository.UserRepository;

import jakarta.transaction.Transactional;

@Service
public class UserService {
	
	@Autowired
	UserRepository repository;

	@Transactional
	public User saveDataToDB(User user) {

		User save = repository.save(user);
		
		return save;
	}

	public List<User> getAllDescriptionNames() {

		return (List<User>) repository.findAll();
		 
		 
	}
@Transactional
	public List<User> getAllUsers() {

		return	(List<User>) repository.findAll();
		
		
	}


public User getUserDataFromDB(int userId) {
	 Optional<User> optionalUser = repository.findById(userId);
	User user = optionalUser.orElseThrow();
	return user;
}

@Transactional
public User updateUserData(int userId,User user) {

	User existingUser = repository.findById(userId)
            .orElseThrow();

    existingUser.setTask(user.getTask());
    existingUser.setEmail(user.getEmail());
    existingUser.setUsername(user.getUsername());
 return   repository.save(existingUser);
}



@Transactional
public List<UserProjectResponse> getAllUserProject() {
	Iterable<User> userProject = repository.findAll();
	List<UserProjectResponse> userProjectResponses = new ArrayList<>();
	for (User user : userProject) {

		userProjectResponses.add(getUserProjectResponse(user));
	}
	return userProjectResponses;
}


public UserProjectResponse getUserProjectResponse(User user) {


	UserProjectResponse projectResponse = new UserProjectResponse();

	if(projectResponse.getProjects().isEmpty()) {
	
	}else {
	projectResponse.setUserId(user.getUserId());

	projectResponse.setUsername(user.getUsername());
	projectResponse.setProjects(user.getProjects());
	return projectResponse;
}
	return projectResponse;
}

}
